service: aws-shop-gateway-api
frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  profile: rss
  region: eu-central-1
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_NAME: ${env:DB_NAME}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    BUCKET_NAME: ${env:BUCKET_NAME}
    AWS_S3_REGION: ${env:AWS_S3_REGION}
    SQS_URL:
      Ref: SQSQueue

  iam:
    role:
      statements:
        - Effect: Allow
          Action: sqs:*
          Resource:
            - Fn::GetAtt: [SQSQueue, Arn]
        - Effect: Allow
          Action: s3:ListBucket
          Resource:
            - arn:aws:s3:::shop-uploads-s3
        - Effect: Allow
          Action: s3:*
          Resource:
            - arn:aws:s3:::shop-uploads-s3/*

plugins:
  - serverless-bundle

# package:
#   individually: true

custom:
  bundle:
    ignorePackages:
      - pg-native

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: shop-catalog-sqs-queue

functions:
  # importService
  importProductsFile:
    handler: src/importService/importProductsFile.handler
    events:
      - http:
          path: /import
          method: get
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: src/importService/importFileParser.handler
    events:
      - s3:
          bucket: shop-uploads-s3
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: src/importService/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn
  # productService
  createProduct:
    handler: src/productService/createProduct.handler
    events:
      - http:
          path: /products
          method: post
  getProductsList:
    handler: src/productService/productsList.handler
    events:
      - http:
          path: /products
          method: get
  getProductsById:
    handler: src/productService/productsById.handler
    events:
      - http:
          path: /products/{productId}
          method: get
